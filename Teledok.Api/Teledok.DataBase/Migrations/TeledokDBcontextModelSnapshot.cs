// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using teledok.Teledok.DataBase;

#nullable disable

namespace Teledok.DataBase.Migrations
{
    [DbContext(typeof(TeledokDBcontext))]
    partial class TeledokDBcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("teledok.Teledok.DataBase.Entities.ClientEntity", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Client_Type")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Create_Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("INN")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("teledok.Teledok.DataBase.Entities.FounderEntity", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("Client_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Create_Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Full_Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("INN")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.ToTable("Founders");
                });
#pragma warning restore 612, 618
        }
    }
}
